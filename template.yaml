AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Resources:

  SnsTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      Subscription:
        - Endpoint: tennis.smith@roundtower.com
          Protocol: email
      TopicName: alarm-on-audit-lambda-error-action

  AwsDailyAuditRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "AwsDailyAuditPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "ec2:*"
                  - "workspaces:*"
                  - "ssm:*"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"

  AwsDailyAuditFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: audit
      Handler: audit.handler
      CodeUri: ./
      Runtime: python3.7
      Timeout: 900
      Description: Daily audit of AWS resources forwarded to MS Teams
      MemorySize: 512
      Role:
        Fn::GetAtt:
          - "AwsDailyAuditRole"
          - "Arn"
      DeadLetterQueue:
        Type: SNS
        TargetArn: !Ref SnsTopic
      Events:
        SetAuditTrigger:
          Type: Schedule
          Properties:
            Schedule: cron(0 22 ? * * *)
